#!/bin/bash
for j
do
    #Reading Input File & Filling  up  X, Y
    X=(); Y=()
    exec < "$j"
    while read line
    do
        X+=(${line%%:*})
        Y+=(${line##*:})
    done
    #------------------------------------------------------------------
    
    #In case of constant vector X
    x_const=true
    let "length = ${#X[@]}";
    for ((i = 0; i < length; i++))
    do
        if [ ${X[i]} != ${X[0]} ]; then
            x_const=false
            break
        fi
    done
    if ${x_const}; then
        echo "FILE: $j, a=1 b=-${X[0]} c=0 err=0"
        continue
    fi
    #------------------------------------------------------------------

    #Estimating  length, sum_x, sum_y, sum_xy, sumx2
    sum_x=0; sum_y=0; sum_xy=0; sum_x2=0
    for ((i = 0; i< length; i++))
    do
        sum_x=$(echo "${X[i]}+${sum_x}" | bc)
        sum_y=$(echo "${Y[i]}+${sum_y}" | bc)
        sum_xy=$(echo "${Y[i]} * ${X[i]} + ${sum_xy}" | bc)
        sum_x2=$(echo "${X[i]} ^ 2 + ${sum_x2}" | bc)
    done
    #Estimating  a, b, c, err
    a=$(echo "scale=2; (${length} * ${sum_xy} - ${sum_x} * ${sum_y}) / (${length} * ${sum_x2} - ${sum_x} * ${sum_x})" | bc | awk '{printf "%.2f\n", $0}')
    b=$(echo "scale=2; (${sum_y} - ${sum_x} * $a) / (${length})" | bc | awk '{printf "%.2f\n", $0}')
    c=1; err=0
    for ((i = 0; i< length; i++))
    do
        err=$(echo "scale=2; ((${Y[i]} - ($a * ${X[i]} + $b)) ^ 2 + ${err})/1" | bc | awk '{printf "%.2f\n", $0}')
    done
    #------------------------------------------------------------------
    
    #Printing Information
    echo "FILE: $j, a=$a b=$b c=$c err=${err}"
    #------------------------------------------------------------------
done